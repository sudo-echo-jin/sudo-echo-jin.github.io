<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>X11 on Jin&#39;s Exploit Repo</title>
        <link>https://sudo-echo-jin.github.io/tags/x11/</link>
        <description>Recent content in X11 on Jin&#39;s Exploit Repo</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 06 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://sudo-echo-jin.github.io/tags/x11/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Squashed</title>
        <link>https://sudo-echo-jin.github.io/p/squashed/</link>
        <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
        
        <guid>https://sudo-echo-jin.github.io/p/squashed/</guid>
        <description>&lt;img src="https://sudo-echo-jin.github.io/p/squashed/Squashed.png" alt="Featured image of post Squashed" /&gt;&lt;h2 id=&#34;enumeration&#34;&gt;Enumeration&lt;/h2&gt;
&lt;p&gt;Our target&amp;rsquo;s IP address is 10.10.11.191.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s begin with port scanning.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/a1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;We can see that SSH, HTTP, and NFS is running.&lt;/p&gt;
&lt;h2 id=&#34;http&#34;&gt;HTTP&lt;/h2&gt;
&lt;p&gt;Firstly, checked the website, but there was nothing interesting or vulnerable. Links were redirections to current page. (#)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/a2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;nfs&#34;&gt;NFS&lt;/h2&gt;
&lt;p&gt;From the scan result, we can see port 111 and 2049 opened, which means the NFS protocol is running. Let&amp;rsquo;s check the list of available exports.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/a3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;There are two exports allowed to anyone (*). Create two directories and let&amp;rsquo;s mount them respectively to our local system.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/a4.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;As we can see above in the screenshot, it seems like the /var/www/html directory is owned by a user whose uid is 2017, and the user ross&amp;rsquo;s uid is 1001 on their system. Let&amp;rsquo;s check the common vulnerability vector, no_root_squash.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/a5.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;no_root_squash is not set. Then what about normal users? Let&amp;rsquo;s make two new users with the uid 2017 and 1001.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/a6.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/a7.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;With these two users, checked if any of these are writable and yes, we can write stuffs in mnt1 share which is web root.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/a8.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;foothold--user-flag&#34;&gt;Foothold &amp;amp; User flag&lt;/h2&gt;
&lt;p&gt;If we can write something into the /var/www/html, this is such a big red flag and this is a way to get the initial foothold to the target system. We can upload malicious php payload in this directory to spawn a reverse shell. We will use one of the most famous payload, pentestermonkey&amp;rsquo;s php-reverse-shell.php (&lt;a class=&#34;link&#34; href=&#34;https://pentestmonkey.net/tools/web-shells/php-reverse-shell%29&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pentestmonkey.net/tools/web-shells/php-reverse-shell)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/a9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Setup a netcat listener on port 9999 and execute the payload with the curl command or directly accessing through the web browser.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;We got in. It seems like the user alex is the one whose uid is 2017. We should upgrade our shell first.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Navigated to alex&amp;rsquo;s home directory and found the user flag.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;privesc--root-flag&#34;&gt;Privesc &amp;amp; Root flag&lt;/h2&gt;
&lt;p&gt;After basic enumeration with linpeas, user ross is currently logged into the system, running on the gnome session on tty7.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b4.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s go back to the NFS share of /home/ross mounted on mnt2 on our local system since alex doesn&amp;rsquo;t have permission to fully view ross&amp;rsquo;s home directory. But remember that we can impersonate ross due to misconfiguration in NFS service.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b5.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;There are many files but we have to focus on the files that are only readable by the user ross which cannot be seen with the alex&amp;rsquo;s user account inside the target system. The most intriguing one of them is .Xauthority file, since we know ross is running a graphical environment.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b6.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;a class=&#34;link&#34; href=&#34;https://askubuntu.com/questions/300682/what-is-the-xauthority-file&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://askubuntu.com/questions/300682/what-is-the-xauthority-file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also looking into .xsession-errors, we get some more information.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b7.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Ross is running lightdm and it is likely that ross is running on DISPLAY:0. We can verify it by taking a screenshot using the credential cookie from .Xauthority.&lt;/p&gt;
&lt;p&gt;Copy .Xauthority to target machine so that alex can import it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b8.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b10.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Exported the ross&amp;rsquo;s Xauthority cookie and tried to take screenshot. (Had some trouble with the xwd syntax)&lt;/p&gt;
&lt;p&gt;Once the screenshot is taken, let&amp;rsquo;s transport it back to our local machine and see the picture.
&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b11.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b12.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Copied the file remotely with the python simple web server and converted the xwd image to png. This time, instead of base64, we use python webserver because the base64 on image data could yield too much text output.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Alex&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python -m http.server &lt;span class=&#34;c1&#34;&gt;# host the server&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Other side&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget 10.10.11.191:8000/screenshot.xwd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;convert screenshot.xwd png.png
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Open png.png
&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b13.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;We got root password. &amp;ldquo;cah$mei7rai9A&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudo-echo-jin/blog/main/squashed/b14.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;We got the root flag.&lt;/p&gt;
&lt;p&gt;It is easy to fall into a rabit hole when people are investigating the ross&amp;rsquo;s home directory via NFS share and find the KeePass database file. I also spent a lot of time on trying to crack the KeePass database. However, ross was actually running this program on the GUI and the way to get this was to steal ross&amp;rsquo;s Xauth cookie to see ross&amp;rsquo;s screen.&lt;/p&gt;
&lt;p&gt;Machine pwned.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
